{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample service for managing users",
        "title": "User API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "soberkoder@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8888",
    "basePath": "/",
    "paths": {
        "/delete": {
            "delete": {
                "description": "Delete car and perso by car id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Delete car and person by car id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "delete car by id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid id supplied"
                    },
                    "404": {
                        "description": "Car not found"
                    }
                }
            }
        },
        "/insert": {
            "post": {
                "description": "Insert reg nums for car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Insert person and car",
                "parameters": [
                    {
                        "description": "Add reg nums",
                        "name": "regNum",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CarNumber"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/show": {
            "get": {
                "description": "Show cars and his owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Show cars and person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sort records",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Show max limit records",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Show records with current offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "12",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "lada",
                        "name": "mark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "kalina",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "x16xx150",
                        "name": "regNum",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2000",
                        "name": "year",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/app.carShow"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters supplied"
                    },
                    "404": {
                        "description": "Cars not found"
                    }
                }
            }
        },
        "/update": {
            "put": {
                "description": "Update cars and persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Update cars and persons",
                "parameters": [
                    {
                        "description": "Update cars",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid parameters supplied"
                    },
                    "404": {
                        "description": "cars or peoples not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "app.carShow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "12"
                },
                "mark": {
                    "type": "string",
                    "example": "lada"
                },
                "model": {
                    "type": "string",
                    "example": "kalina"
                },
                "owner": {
                    "$ref": "#/definitions/app.peopleShow"
                },
                "regNum": {
                    "type": "string",
                    "example": "x16xx150"
                },
                "year": {
                    "type": "string",
                    "example": "2000"
                }
            }
        },
        "app.peopleShow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "14"
                },
                "name": {
                    "type": "string",
                    "example": "james"
                },
                "patronymic": {
                    "type": "string",
                    "example": "petrovich"
                },
                "surname": {
                    "type": "string",
                    "example": "johnson"
                }
            }
        },
        "models.Car": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "12"
                },
                "mark": {
                    "type": "string",
                    "example": ""
                },
                "model": {
                    "type": "string",
                    "example": "tesla"
                },
                "owner": {
                    "$ref": "#/definitions/models.People"
                },
                "regNum": {
                    "type": "string",
                    "example": ""
                },
                "year": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "models.CarNumber": {
            "type": "object",
            "properties": {
                "regNum": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "x150xx150",
                        "x24xx134"
                    ]
                }
            }
        },
        "models.People": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": ""
                },
                "name": {
                    "type": "string",
                    "example": "jamson"
                },
                "patronymic": {
                    "type": "string",
                    "example": ""
                },
                "surname": {
                    "type": "string",
                    "example": ""
                }
            }
        }
    }
}